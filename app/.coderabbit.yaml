# CodeRabbit Configuration for AbacusHub
# This configuration optimizes AI-powered code reviews for TypeScript/React applications

# Review configuration
reviews:
  # Enable high-quality reviews with comprehensive analysis
  profile: assertive
  
  # Custom instructions for different file types
  path_instructions:
    - path: "**/*.{ts,tsx}"
      instructions: |
        Review TypeScript code for:
        - Replace 'any' types with specific, meaningful types
        - Remove unused imports and variables
        - Ensure proper error handling and type safety
        - Follow React best practices for hooks and components
        - Maintain consistent naming conventions (camelCase)
        
    - path: "**/*.{js,jsx}"
      instructions: |
        Review JavaScript/JSX code for:
        - Fix unescaped entities in JSX (use &apos; for apostrophes)
        - Remove unused imports and variables
        - Ensure proper React patterns and accessibility
        - Convert to TypeScript where beneficial
        
    - path: "**/__tests__/**"
      instructions: |
        Review test code for:
        - Proper mock configurations and cleanup
        - Comprehensive test coverage
        - Clear, descriptive test names
        - Avoid testing implementation details
        
    - path: "app/api/**"
      instructions: |
        Review API routes for:
        - Proper error handling and status codes
        - Input validation and sanitization
        - Type safety for request/response
        - Security best practices
        
    - path: "components/**"
      instructions: |
        Review React components for:
        - Proper prop typing and validation
        - Accessibility considerations
        - Performance optimizations (memo, useMemo, useCallback)
        - Consistent component patterns

  # Advanced AST-based rules for code quality
  tools:
    ast-grep:
      essential_rules: true
      rule_dirs:
        - ".coderabbit/rules"
      
  # Request specific focus areas
  request_changes_workflow: true
  
# Code generation settings
code_generation:
  # Enhanced docstring generation
  docstrings:
    path_instructions:
      - path: "**/*.{ts,tsx}"
        instructions: |
          Generate comprehensive JSDoc comments including:
          - Clear description of function purpose
          - @param tags with types and descriptions
          - @returns tag with type and description
          - @throws for potential errors
          - @example for complex functions
          End with: "Auto-generated by CodeRabbit AI"

# Language-specific configurations
language:
  typescript:
    # Enforce strict typing practices
    strict_mode: true
    # Prefer interfaces over types where appropriate
    prefer_interfaces: true
    
  javascript:
    # Encourage migration to TypeScript
    suggest_typescript: true
    
  react:
    # Enforce React best practices
    hooks_rules: strict
    # Prefer functional components
    prefer_functional: true

# Integration settings
integrations:
  # Link to project management
  issue_templates:
    - name: "Code Quality Improvement"
      template: |
        ## Issue Description
        ESLint violations found in: {files}
        
        ## Violations
        {violations}
        
        ## Acceptance Criteria
        - [ ] All ESLint errors resolved
        - [ ] No regression in functionality
        - [ ] Tests pass
        - [ ] Type safety maintained
        
# Custom rules for AbacusHub-specific patterns
reviews:
  custom_rules:
    - name: "no-console-in-production"
      pattern: "console.log|console.debug|console.warn"
      message: "Remove console statements in production code. Use proper logging."
      severity: "warning"
      
    - name: "prefer-const"
      pattern: "let $VAR = $VALUE"
      message: "Use 'const' instead of 'let' when variable is not reassigned"
      severity: "info"
      
    - name: "require-error-handling"
      pattern: "await $PROMISE"
      message: "Add proper error handling for async operations"
      severity: "warning"
      
# Learning preferences for AI model
ai_learning:
  # Remember project-specific patterns
  remember_patterns: true
  # Learn from approved suggestions
  learn_from_approvals: true
  # Adapt to team coding style
  adapt_style: true

# Notification settings
notifications:
  # Notify on significant issues only
  threshold: "warning"
  # Focus on actionable feedback
  actionable_only: true